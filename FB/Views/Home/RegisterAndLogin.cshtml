@model FB.ViewModels.UserLoginUserViewModel

@{
    ViewBag.Title = "RegisterAndLogin";
}

<h2>RegisterAndLogin</h2>

<div id="header_wrapper">
    <div id="header">
        @using (Html.BeginForm("Login", "Home", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    <strong>Error! </strong>@ViewBag.Message
                </div>
            }

            <div class="form-horizontal">
                <h4>UserLogin</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.userLogin.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userLogin.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userLogin.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userLogin.password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.userLogin.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userLogin.password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.userLogin.rememberMe, htmlAttributes: new { @class = "control-label col-md-2", @value = "true" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.userLogin.rememberMe)
                            @Html.ValidationMessageFor(model => model.userLogin.rememberMe, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="login" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="wrapper">
    <div id="div2">
        <h1>Create an account</h1>
        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
        {
            if (ViewBag.Message != null)
            {
                <div class="alert alert-success">
                    <strong>Success!</strong>@ViewBag.Message
                </div>
            }
        }
        else
        {
            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    <strong>Error! </strong>@ViewBag.Message
                </div>
            }
            using (Html.BeginForm("Register", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.user.first_name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user.first_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user.first_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.last_name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user.last_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user.last_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user.email, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user.password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.confirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user.confirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user.phone_number, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("PhoneNumberExist", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user.profile_picture, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input name="image" type="file" />
                            @Html.ValidationMessageFor(model => model.user.profile_picture, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("NotValidImage", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Signup" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
